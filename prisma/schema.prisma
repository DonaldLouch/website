// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  shadowDatabaseUrl    = env("SHADOW_DATABASE_URL")
  referentialIntegrity = "prisma"
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

model User {
  id            String    @id @default(cuid())
  name                 String?
  firstName     String?
  lastName      String?
  email         String    @unique
  emailVerified DateTime?
  image                  String?
  userLevel     Int?
  createdOn     DateTime @default(now())
  lastUpdatedOn DateTime @default(now())
  accounts  Account[]
  sessions  Session[]
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?
  api_domain String?  @db.Text

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime
  @@unique([identifier, token])
}

model BusinessVerification {
  id                 String  @id @default(cuid())
  companyID          String
  userID String @unique
  userPosition   String?
  token    String
  requestedOn DateTime
}

model About {
  id          String @id @default(cuid())
  birthDate DateTime
  currentAge Int
  firstName   String
  middleName  String
  lastName    String
  pronouns String
  email       String
  tagLine     String
  bio         String  @db.Text
  bioExcerpt String  @db.VarChar(300)
  avatar String
  city String
  country String
  province String
  lastUpdatedOn DateTime @default(now())
}

model Links {
  id String @id @default(cuid())
  iconName String
  iconPrefix String
  title String
  subTitle String
  link String
  addedOn DateTime @default(now())
  lastUpdatedOn DateTime @default(now())
  orderNumber Int? @unique
  clicks Int @default(0)
}

model Embed {
  id String @id @default(cuid())
  title String
  link String
  embedLink String
  options String? @db.Text
  note String?  @db.Text
  addedOn DateTime @default(now())
  lastUpdatedOn DateTime @default(now())
  orderNumber Int? @unique
}

model PrimaryLinks {
  id String @id @default(cuid())
  icon String
  title String
  subTitle String
  link String
  addedOn DateTime @default(now())
  lastUpdatedOn DateTime @default(now())
  orderNumber Int @unique
  clicks Int @default(0)
}

model PinnedPosts {
  id String @id @default(cuid())
  orderNumber Int @unique
  postID String @unique
  postTitle String @unique
  postSlug String @unique
  thumbnail String
  excerpt String  @db.VarChar(300)
  addedOn DateTime @default(now())
  lastUpdatedOn DateTime @default(now())
}

model Resume {
  id            String   @id @default(cuid())
  firstName     String
  middleName    String
  lastName      String
  pronouns String
  currentAge Int
  address       String
  email         String
  phone         String
  linkedin      String
  profile       String  @db.Text
  skills        String  @db.Text
  bioExcerpt String  @db.VarChar(300)
  avatar String
  lastUpdatedOn DateTime @default(now())
}

model ResumeWorkExperience {
  id          String                        @id @default(cuid())
  company     String
  startDate   String
  endDate     String?
  position    String
  description String  @db.Text
}

model ResumeWorkExperienceHistory {
  id                   String               @id @default(cuid())
  position             String?
  startDate            String?
  endDate              String?
  description          String?  @db.Text
  resumeID String 
}

model ResumeEducation {
  id          String @id @default(cuid())
  school      String
  startDate   Int
  endDate     Int
  degree      String
  description String?  @db.Text
}

model BlogPost {
  orderNumber Int @id @default(autoincrement())
  id String @unique
  title String
  slug          String @unique
  blogType      String
  media         String? @db.Text
  mediaCredit   String?  @db.Text
  headingText String? @db.VarChar(300)
  body         String  @db.Text
  excerpt       String  @db.VarChar(300)
  categories    String
  tags          String  @db.Text
  thumbnail     String
  sidebar       Boolean
  sections      String?  @db.Text
  author        String
  postedOn      DateTime @default(now())
  lastUpdatedOn DateTime @default(now())
  postStatus    String
  views         Int @default(0)
}

model Media {
  mediaID          String   @id @default(cuid())
  mediaPublicID String  @db.Text
  mediaSignature String @db.Text
  mediaKind        String
  mediaTitle       String
  mediaALT         String?
  mediaExtension   String
  mediaPath        String @unique
  mediaDescription String?  @db.Text
  mediaSize        Int
  mediaDimensions  String
  uploadedOn       DateTime @default(now())
  postedIn         String?
}

model Page {
  orderNumber Int @id @default(autoincrement())
  id          String @unique
  title       String
  slug        String @unique
  body        String?  @db.Text
  excerpt     String?  @db.VarChar(300)
  tags        String?    @db.Text
  lastUpdatedOn   DateTime @default(now())
  pageStatus  String
  views       Int @default(0)
}